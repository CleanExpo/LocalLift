{
  "modules": {
    "client_dashboard": {
      "description": "Creates a dashboard for clients showing their latest GMB post status, weekly badge display, and compliance tracking graph.",
      "role": "client",
      "module_type": "dashboard",
      "target_folder": "/apps/client",
      "templates": [
        {
          "path": "templates/dashboard_client.html",
          "description": "Client dashboard template with badge display and GMB status"
        },
        {
          "path": "static/js/dashboard_client.js",
          "description": "JavaScript for client dashboard interactive elements"
        },
        {
          "path": "api/dashboard_client.py",
          "description": "API endpoints for client dashboard data"
        }
      ],
      "dependencies": [
        "gamification",
        "leaderboards",
        "certifications"
      ],
      "models": [
        {
          "name": "ClientDashboardStats",
          "attributes": [
            "client_id: str (foreign key to users.id)",
            "post_status: Dict[str, Any]",
            "badges_earned: List[str]",
            "compliance_score: float",
            "last_updated: datetime"
          ]
        }
      ]
    },
    "admin_crm_manager": {
      "description": "Generates an admin interface to view, filter, and manage all clients and assign to sales team.",
      "role": "admin",
      "module_type": "crm",
      "target_folder": "/apps/admin",
      "templates": [
        {
          "path": "templates/crm_admin.html",
          "description": "Admin CRM manager interface with filtering and assignment capabilities"
        },
        {
          "path": "static/js/crm_admin.js",
          "description": "JavaScript for admin CRM interface with search and filtering"
        },
        {
          "path": "api/crm_admin.py",
          "description": "API endpoints for admin CRM operations"
        }
      ],
      "dependencies": [
        "core.auth",
        "core.database"
      ],
      "models": [
        {
          "name": "ClientAssignment",
          "attributes": [
            "client_id: str (foreign key to users.id)",
            "sales_rep_id: str (foreign key to users.id)",
            "assignment_date: datetime",
            "notes: Optional[str]",
            "status: str ('active', 'inactive', 'pending')"
          ]
        },
        {
          "name": "ClientFilter",
          "attributes": [
            "name: str",
            "created_by: str (foreign key to users.id)",
            "criteria: Dict[str, Any]",
            "is_public: bool",
            "created_at: datetime"
          ]
        }
      ]
    },
    "client_gmb_post_tracker": {
      "description": "Tracks Google My Business posts for clients, including scheduling, performance metrics, and content suggestions.",
      "role": "client",
      "module_type": "tracker",
      "target_folder": "/apps/client",
      "templates": [
        {
          "path": "templates/gmb_post_tracker.html",
          "description": "GMB post tracking interface showing post history, status, and analytics"
        },
        {
          "path": "static/js/gmb_post_tracker.js",
          "description": "JavaScript for interactive post tracking experience"
        },
        {
          "path": "api/gmb_post_tracker.py",
          "description": "API endpoints for GMB post data and tracking"
        }
      ],
      "dependencies": [
        "core.auth",
        "core.database",
        "core.external.gmb_api"
      ],
      "models": [
        {
          "name": "GmbPost",
          "attributes": [
            "client_id: str (foreign key to users.id)",
            "post_id: str",
            "content: str",
            "image_url: Optional[str]",
            "scheduled_date: datetime",
            "published_date: Optional[datetime]",
            "status: str ('draft', 'scheduled', 'published', 'failed')",
            "metrics: Dict[str, Any]",
            "last_updated: datetime"
          ]
        },
        {
          "name": "PostTemplate",
          "attributes": [
            "name: str",
            "content_template: str",
            "category: str",
            "tags: List[str]",
            "created_by: str (foreign key to users.id)",
            "is_public: bool",
            "created_at: datetime"
          ]
        }
      ]
    },
    "admin_region_leaderboard": {
      "description": "Regional performance leaderboard for administrators showing key metrics by geographic area with ranking and comparative analysis.",
      "role": "admin",
      "module_type": "leaderboard",
      "target_folder": "/apps/admin",
      "templates": [
        {
          "path": "templates/region_leaderboard.html",
          "description": "Regional leaderboard interface with sorting, filtering, and map visualization"
        },
        {
          "path": "static/js/region_leaderboard.js",
          "description": "JavaScript for interactive leaderboard with animations and data visualization"
        },
        {
          "path": "api/region_leaderboard.py",
          "description": "API endpoints for regional performance data"
        }
      ],
      "dependencies": [
        "core.auth",
        "core.database",
        "core.analytics",
        "core.geo"
      ],
      "models": [
        {
          "name": "RegionStats",
          "attributes": [
            "region_id: str (primary key)",
            "name: str",
            "country: str",
            "state_province: str",
            "city: Optional[str]",
            "total_clients: int",
            "active_clients: int",
            "average_engagement: float",
            "total_revenue: float",
            "year_over_year_growth: float",
            "last_updated: datetime"
          ]
        },
        {
          "name": "LeaderboardEntry",
          "attributes": [
            "id: str (primary key)",
            "region_id: str (foreign key to RegionStats.region_id)",
            "rank: int",
            "score: float",
            "metric_type: str ('revenue', 'growth', 'engagement', 'compliance')",
            "previous_rank: Optional[int]",
            "trend: str ('up', 'down', 'stable')",
            "created_at: datetime"
          ]
        }
      ]
    },
    "sales_conversion_graph": {
      "description": "Dashboard graph to show conversion rate per sales rep and region over time.",
      "role": "sales",
      "module_type": "graph",
      "target_folder": "/apps/sales",
      "templates": [
        {
          "path": "templates/conversion_graph.html",
          "description": "Sales conversion graph interface with interactive funnel visualization"
        },
        {
          "path": "static/js/conversion_graph.js",
          "description": "JavaScript for interactive conversion funnel with D3.js visualizations"
        },
        {
          "path": "api/conversion_graph.py",
          "description": "API endpoints for sales conversion data"
        }
      ],
      "dependencies": [
        "core.auth",
        "core.database",
        "core.analytics",
        "core.sales"
      ],
      "models": [
        {
          "name": "ConversionData",
          "attributes": [
            "id: str (primary key)",
            "team_id: str (foreign key to teams.id)",
            "date_range: str ('daily', 'weekly', 'monthly', 'quarterly', 'yearly')",
            "start_date: datetime",
            "end_date: datetime",
            "lead_count: int",
            "qualified_count: int",
            "proposal_count: int",
            "closed_count: int",
            "conversion_rates: Dict[str, float]",
            "average_sale_value: float",
            "last_updated: datetime"
          ]
        },
        {
          "name": "SalesFunnelStage",
          "attributes": [
            "id: str (primary key)",
            "conversion_data_id: str (foreign key to ConversionData.id)",
            "stage_name: str",
            "entry_count: int",
            "exit_count: int",
            "conversion_rate: float",
            "average_time_in_stage: float",
            "created_at: datetime"
          ]
        }
      ]
    },
    "weekly_engagement_report": {
      "description": "Automated weekly report showing engagement metrics, trends, and actionable insights for clients and managers.",
      "role": "client",
      "module_type": "report",
      "target_folder": "/apps/reports",
      "templates": [
        {
          "path": "templates/weekly_engagement_report.html",
          "description": "Weekly engagement report template with metrics visualization and insights"
        },
        {
          "path": "static/js/weekly_engagement_report.js",
          "description": "JavaScript for interactive report elements and data visualization"
        },
        {
          "path": "api/weekly_engagement_report.py",
          "description": "API endpoints for report data and scheduled generation"
        }
      ],
      "dependencies": [
        "core.auth",
        "core.database",
        "core.analytics",
        "core.reporting",
        "core.notifications"
      ],
      "models": [
        {
          "name": "WeeklyReport",
          "attributes": [
            "id: str (primary key)",
            "client_id: str (foreign key to users.id)",
            "report_date: datetime",
            "week_number: int",
            "year: int",
            "metrics: Dict[str, Any]",
            "insights: List[Dict[str, Any]]",
            "recommendations: List[Dict[str, Any]]",
            "status: str ('draft', 'generated', 'delivered', 'viewed')",
            "delivered_at: Optional[datetime]",
            "viewed_at: Optional[datetime]",
            "created_at: datetime"
          ]
        },
        {
          "name": "EngagementMetric",
          "attributes": [
            "id: str (primary key)",
            "report_id: str (foreign key to WeeklyReport.id)",
            "metric_type: str ('views', 'clicks', 'calls', 'direction_requests', 'messages', 'bookings')",
            "current_value: int",
            "previous_value: int",
            "change_percentage: float",
            "trend: str ('up', 'down', 'stable')",
            "benchmark_value: Optional[float]",
            "benchmark_comparison: Optional[str] ('above', 'below', 'equal')",
            "created_at: datetime"
          ]
        },
        {
          "name": "ReportDeliveryPreference",
          "attributes": [
            "id: str (primary key)",
            "client_id: str (foreign key to users.id)",
            "delivery_method: str ('email', 'sms', 'dashboard', 'api')",
            "delivery_day: str ('monday', 'tuesday', 'wednesday', 'thursday', 'friday')",
            "delivery_time: time",
            "recipients: List[str]",
            "is_active: bool",
            "created_at: datetime",
            "updated_at: datetime"
          ]
        }
      ]
    },
    "education_hub_client": {
      "description": "Learning center for clients featuring tutorials, best practices, industry knowledge, and interactive guides for GMB optimization.",
      "role": "client",
      "module_type": "education",
      "target_folder": "/apps/client",
      "templates": [
        {
          "path": "templates/education_hub.html",
          "description": "Education hub main interface with categorized learning materials and progress tracking"
        },
        {
          "path": "templates/education_article.html",
          "description": "Template for individual educational articles and guides"
        },
        {
          "path": "static/js/education_hub.js",
          "description": "JavaScript for interactive learning features and progress tracking"
        },
        {
          "path": "api/education_hub.py",
          "description": "API endpoints for educational content and user progress"
        }
      ],
      "dependencies": [
        "core.auth",
        "core.database",
        "core.content"
      ],
      "models": [
        {
          "name": "EducationalContent",
          "attributes": [
            "id: str (primary key)",
            "title: str",
            "slug: str",
            "category: str",
            "subcategory: Optional[str]",
            "content: str",
            "format: str ('article', 'video', 'guide', 'checklist')",
            "difficulty: str ('beginner', 'intermediate', 'advanced')",
            "estimated_time: int",
            "published: bool",
            "created_at: datetime",
            "updated_at: datetime"
          ]
        },
        {
          "name": "LearningProgress",
          "attributes": [
            "id: str (primary key)",
            "client_id: str (foreign key to users.id)",
            "content_id: str (foreign key to EducationalContent.id)",
            "status: str ('not_started', 'in_progress', 'completed')",
            "progress_percentage: float",
            "last_accessed: datetime",
            "completed_at: Optional[datetime]",
            "notes: Optional[str]",
            "bookmarked: bool",
            "created_at: datetime",
            "updated_at: datetime"
          ]
        },
        {
          "name": "LearningPath",
          "attributes": [
            "id: str (primary key)",
            "title: str",
            "description: str",
            "category: str",
            "content_ids: List[str]",
            "required_order: bool",
            "estimated_completion_days: int",
            "difficulty: str ('beginner', 'intermediate', 'advanced')",
            "published: bool",
            "created_at: datetime",
            "updated_at: datetime"
          ]
        }
      ]
    }
  },
  "metadata": {
    "version": "1.0.0",
    "description": "Module configurations for LocalLift module generator",
    "lastUpdated": "2025-04-15"
  }
}
